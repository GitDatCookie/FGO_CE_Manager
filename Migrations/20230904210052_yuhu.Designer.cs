// <auto-generated />
using System;
using FGO_CE_Manager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FGO_CE_Manager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230904210052_yuhu")]
    partial class yuhu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CollectionNo")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "collectionNo");

                    b.Property<int>("ExtraAssetsID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Guid");

                    b.HasIndex("ExtraAssetsID");

                    b.ToTable("CE");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE_ExtraAssets", b =>
                {
                    b.Property<int>("ExtraAssetsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraAssetsID"));

                    b.Property<int>("CharaGraphID")
                        .HasColumnType("int");

                    b.Property<int>("FacesID")
                        .HasColumnType("int");

                    b.HasKey("ExtraAssetsID");

                    b.HasIndex("CharaGraphID");

                    b.HasIndex("FacesID");

                    b.ToTable("ExtraAssets");

                    b.HasAnnotation("Relational:JsonPropertyName", "extraAssets");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE_Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<Guid?>("CEGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillID");

                    b.HasIndex("CEGuid");

                    b.ToTable("Skill");

                    b.HasAnnotation("Relational:JsonPropertyName", "skills");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.ExtraAssets_CharaGraph", b =>
                {
                    b.Property<int>("CharaGraphID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharaGraphID"));

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharaGraphID");

                    b.ToTable("CharaGraph");

                    b.HasAnnotation("Relational:JsonPropertyName", "charaGraph");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.ExtraAssets_Faces", b =>
                {
                    b.Property<int>("FacesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacesID"));

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacesID");

                    b.ToTable("Faces");

                    b.HasAnnotation("Relational:JsonPropertyName", "faces");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.Functions_Sval", b =>
                {
                    b.Property<int>("SvalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SvalID"));

                    b.Property<int?>("EventID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "EventId");

                    b.Property<int?>("Skills_FunctionFunctionID")
                        .HasColumnType("int");

                    b.HasKey("SvalID");

                    b.HasIndex("Skills_FunctionFunctionID");

                    b.ToTable("Sval");

                    b.HasAnnotation("Relational:JsonPropertyName", "svals");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.Skills_Function", b =>
                {
                    b.Property<int>("FunctionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FunctionID"));

                    b.Property<int?>("CE_SkillSkillID")
                        .HasColumnType("int");

                    b.HasKey("FunctionID");

                    b.HasIndex("CE_SkillSkillID");

                    b.ToTable("Function");

                    b.HasAnnotation("Relational:JsonPropertyName", "functions");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.EventModels.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EventID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("ID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE", b =>
                {
                    b.HasOne("FGO_CE_Manager.Data.CEModels.CE_ExtraAssets", "ExtraAssets")
                        .WithMany()
                        .HasForeignKey("ExtraAssetsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraAssets");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE_ExtraAssets", b =>
                {
                    b.HasOne("FGO_CE_Manager.Data.CEModels.ExtraAssets_CharaGraph", "CharaGraph")
                        .WithMany()
                        .HasForeignKey("CharaGraphID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGO_CE_Manager.Data.CEModels.ExtraAssets_Faces", "Faces")
                        .WithMany()
                        .HasForeignKey("FacesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharaGraph");

                    b.Navigation("Faces");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE_Skill", b =>
                {
                    b.HasOne("FGO_CE_Manager.Data.CEModels.CE", null)
                        .WithMany("Skills")
                        .HasForeignKey("CEGuid");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.Functions_Sval", b =>
                {
                    b.HasOne("FGO_CE_Manager.Data.CEModels.Skills_Function", null)
                        .WithMany("Svals")
                        .HasForeignKey("Skills_FunctionFunctionID");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.Skills_Function", b =>
                {
                    b.HasOne("FGO_CE_Manager.Data.CEModels.CE_Skill", null)
                        .WithMany("Functions")
                        .HasForeignKey("CE_SkillSkillID");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.CE_Skill", b =>
                {
                    b.Navigation("Functions");
                });

            modelBuilder.Entity("FGO_CE_Manager.Data.CEModels.Skills_Function", b =>
                {
                    b.Navigation("Svals");
                });
#pragma warning restore 612, 618
        }
    }
}
